name: Polybot Microservice Deployment

on:
  push:
    paths:
      - 'polybot/**'
    branches:
      - main

env:
  EC2_PUBLIC_IP0: 3.249.126.140  #  replace to your EC2 instance public IP
  EC2_PUBLIC_IP2: 3.252.200.173   #  replace to your EC2 instance public IP

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo code
        uses: actions/checkout@v2

      - name: Build and push image
        run: |
          cd polybot
          
          # Login to ECR (commend in in case you use ECR, change region code and ECR URI):
          # export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          # export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          # aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin 352708296901.dkr.ecr.eu-central-1.amazonaws.com

          # Login to DockerHub (comment out if you don't use DockerHub):         
          docker login -u ${{ secrets.DOCKER_REPO_USERNAME }} -p ${{ secrets.DOCKER_REPO_PASSWORD }}

          POLY_BOT_IMAGE_NAME=image_polybot_am_project:${{ github.run_number }}
          docker build -t $POLY_BOT_IMAGE_NAME .
          docker tag $POLY_BOT_IMAGE_NAME ${{ secrets.DOCKER_REPO_USERNAME }}/$POLY_BOT_IMAGE_NAME

          docker push ${{ secrets.DOCKER_REPO_USERNAME }}/$POLY_BOT_IMAGE_NAME
  Deploy:
    runs-on: ubuntu-latest
    needs:
      - Build

    steps:
      - name: Deploy new version
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.EC2_PUBLIC_IP0 }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          run: |

            # Stop the existing container
            CONTAINER_NAME="my_polybot"
            RUNNING_CONTAINER=$(docker ps -q --filter "name=$CONTAINER_NAME")
            if [ ! -z "$RUNNING_CONTAINER" ]; then
              docker stop $CONTAINER_NAME
            fi

            # Prune unnecessary Docker data
            docker system prune --force

            # Run the new container
            docker run --name $CONTAINER_NAME -p 8443:8443 --restart always ${{ secrets.DOCKER_REPO_USERNAME }}/$POLY_BOT_IMAGE_NAME
        
          

      - name: Deploy new version on second station
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.EC2_PUBLIC_IP0 }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          run: |

            # Stop the existing container
            CONTAINER_NAME="my_polybot"
            RUNNING_CONTAINER=$(docker ps -q --filter "name=$CONTAINER_NAME")
            if [ ! -z "$RUNNING_CONTAINER" ]; then
              docker stop $CONTAINER_NAME
            fi

            # Prune unnecessary Docker data
            docker system prune --force

            # Run the new container
            docker run --name $CONTAINER_NAME -p 8443:8443 --restart always ${{ secrets.DOCKER_REPO_USERNAME }}/$POLY_BOT_IMAGE_NAME