name: Yolo5 Deployment

on:
  push:
    paths:
      - 'yolo5/**'
    branches:
      - main

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}


    - name: Set up Docker Build
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_REPO_USERNAME }}
        password: ${{ secrets.DOCKER_REPO_PASSWORD }}

    - name: Build and push Docker image
      run: |
        cd yolo5
        YOLO5_IMAGE_NAME=image_yolo5_am_project:${{ github.run_number }}
        docker build -t $YOLO5_IMAGE_NAME .
        docker tag $YOLO5_IMAGE_NAME ${{ secrets.DOCKER_REPO_USERNAME }}/$YOLO5_IMAGE_NAME
        docker push ${{ secrets.DOCKER_REPO_USERNAME }}/$YOLO5_IMAGE_NAME
        



    - name: Deploy to AWS EC2
      run: |  
        INSTANCE_ID=$(aws autoscaling describe-auto-scaling-instances --query "AutoScalingInstances[0].InstanceId" --output text)
        echo "INSTANCE_ID=$INSTANCE_ID" >> $GITHUB_ENV
        EC2_PUBLIC_IP=$(aws ec2 describe-instances --instance-ids $INSTANCE_ID --query "Reservations[0].Instances[0].PublicIpAddress" --output text)
        echo $EC2_PUBLIC_IP
        YOLO5_IMAGE_NAME=image_yolo5_am_project:${{ github.run_number }}
        echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > private_key.pem
        chmod 400 private_key.pem
        # Retry SSH connection up to 5 times with a delay
        for attempt in {1..5}; do
          echo "Attempt $attempt to connect to $EC2_PUBLIC_IP "
          if ssh -o StrictHostKeyChecking=no -i private_key.pem ubuntu@$EC2_PUBLIC_IP "echo 'SSH connection successful'"; then
            echo "SSH connection successful to $EC2_PUBLIC_IP"
            ssh -o StrictHostKeyChecking=no -i private_key.pem ubuntu@$EC2_PUBLIC_IP "sudo docker stop my_yolo5_test || true"
            ssh -o StrictHostKeyChecking=no -i private_key.pem ubuntu@$EC2_PUBLIC_IP "sudo docker rm my_yolo5_test || true"
            ssh -o StrictHostKeyChecking=no -i private_key.pem ubuntu@$EC2_PUBLIC_IP "sudo docker pull ${{ secrets.DOCKER_REPO_USERNAME }}/$YOLO5_IMAGE_NAME"
            ssh -o StrictHostKeyChecking=no -i private_key.pem ubuntu@$EC2_PUBLIC_IP "sudo docker run -d --name my_yolo5_test ${{ secrets.DOCKER_REPO_USERNAME }}/$YOLO5_IMAGE_NAME"
            break
          else
            echo "SSH connection to ubuntu@$EC2_PUBLIC_IP failed. Retrying in 10 seconds..."
            sleep 10
          fi
        done
      env:
        AWS_REGION: ${{ secrets.AWS_REGION }}